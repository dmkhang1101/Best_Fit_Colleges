{"ast":null,"code":"var _jsxFileName = \"/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/components/table/table.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport { useMemo, useState } from 'react';\nimport { MaterialReactTable,\n// createRow,\nuseMaterialReactTable } from 'material-react-table';\nimport { Box, Button, CircularProgress, IconButton, Tooltip, Typography } from '@mui/material';\nimport { QueryClient, QueryClientProvider, useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { fakeData, usStates } from './makeData';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [validationErrors, setValidationErrors] = useState({});\n  //keep track of rows that have been edited\n  const [editedUsers, setEditedUsers] = useState({});\n  const columns = useMemo(() => [{\n    accessorKey: 'id',\n    header: 'Id',\n    enableEditing: false,\n    size: 80\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    muiEditTextFieldProps: ({\n      cell,\n      row\n    }) => ({\n      type: 'text',\n      required: true,\n      error: !!(validationErrors !== null && validationErrors !== void 0 && validationErrors[cell.id]),\n      helperText: validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors[cell.id],\n      //store edited user in state to be saved later\n      onBlur: event => {\n        const validationError = !validateRequired(event.currentTarget.value) ? 'Required' : undefined;\n        setValidationErrors({\n          ...validationErrors,\n          [cell.id]: validationError\n        });\n        setEditedUsers({\n          ...editedUsers,\n          [row.id]: row.original\n        });\n      }\n    })\n  }, {\n    accessorKey: 'lastName',\n    header: 'Last Name',\n    muiEditTextFieldProps: ({\n      cell,\n      row\n    }) => ({\n      type: 'text',\n      required: true,\n      error: !!(validationErrors !== null && validationErrors !== void 0 && validationErrors[cell.id]),\n      helperText: validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors[cell.id],\n      //store edited user in state to be saved later\n      onBlur: event => {\n        const validationError = !validateRequired(event.currentTarget.value) ? 'Required' : undefined;\n        setValidationErrors({\n          ...validationErrors,\n          [cell.id]: validationError\n        });\n        setEditedUsers({\n          ...editedUsers,\n          [row.id]: row.original\n        });\n      }\n    })\n  }, {\n    accessorKey: 'email',\n    header: 'Email',\n    muiEditTextFieldProps: ({\n      cell,\n      row\n    }) => ({\n      type: 'email',\n      required: true,\n      error: !!(validationErrors !== null && validationErrors !== void 0 && validationErrors[cell.id]),\n      helperText: validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors[cell.id],\n      //store edited user in state to be saved later\n      onBlur: event => {\n        const validationError = !validateEmail(event.currentTarget.value) ? 'Incorrect Email Format' : undefined;\n        setValidationErrors({\n          ...validationErrors,\n          [cell.id]: validationError\n        });\n        setEditedUsers({\n          ...editedUsers,\n          [row.id]: row.original\n        });\n      }\n    })\n  }, {\n    accessorKey: 'state',\n    header: 'State',\n    editVariant: 'select',\n    editSelectOptions: usStates,\n    muiEditTextFieldProps: ({\n      row\n    }) => ({\n      select: true,\n      error: !!(validationErrors !== null && validationErrors !== void 0 && validationErrors.state),\n      helperText: validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors.state,\n      onChange: event => setEditedUsers({\n        ...editedUsers,\n        [row.id]: {\n          ...row.original,\n          state: event.target.value\n        }\n      })\n    })\n  }], [editedUsers, validationErrors]);\n\n  //call CREATE hook\n  const {\n    mutateAsync: createUser,\n    isPending: isCreatingUser\n  } = useCreateUser();\n  //call READ hook\n  const {\n    data: fetchedUsers = [],\n    isError: isLoadingUsersError,\n    isFetching: isFetchingUsers,\n    isLoading: isLoadingUsers\n  } = useGetUsers();\n  //call UPDATE hook\n  const {\n    mutateAsync: updateUsers,\n    isPending: isUpdatingUsers\n  } = useUpdateUsers();\n  //call DELETE hook\n  const {\n    mutateAsync: deleteUser,\n    isPending: isDeletingUser\n  } = useDeleteUser();\n\n  //CREATE action\n  const handleCreateUser = async ({\n    values,\n    table\n  }) => {\n    const newValidationErrors = validateUser(values);\n    if (Object.values(newValidationErrors).some(error => error)) {\n      setValidationErrors(newValidationErrors);\n      return;\n    }\n    setValidationErrors({});\n    await createUser(values);\n    table.setCreatingRow(null); //exit creating mode\n  };\n\n  //UPDATE action\n  const handleSaveUsers = async () => {\n    if (Object.values(validationErrors).some(error => !!error)) return;\n    await updateUsers(Object.values(editedUsers));\n    setEditedUsers({});\n  };\n\n  //DELETE action\n  const openDeleteConfirmModal = row => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      deleteUser(row.original.id);\n    }\n  };\n  const table = useMaterialReactTable({\n    columns,\n    data: fetchedUsers,\n    createDisplayMode: 'row',\n    // ('modal', and 'custom' are also available)\n    editDisplayMode: 'cell',\n    // ('modal', 'row', 'table', and 'custom' are also available)\n    enableCellActions: true,\n    enableClickToCopy: 'context-menu',\n    enableColumnPinning: true,\n    enableEditing: true,\n    enableRowActions: true,\n    getRowId: row => row.id,\n    muiToolbarAlertBannerProps: isLoadingUsersError ? {\n      color: 'error',\n      children: 'Error loading data'\n    } : undefined,\n    muiTableContainerProps: {\n      sx: {\n        minHeight: '500px'\n      }\n    },\n    onCreatingRowCancel: () => setValidationErrors({}),\n    onCreatingRowSave: handleCreateUser,\n    renderRowActions: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"error\",\n          onClick: () => openDeleteConfirmModal(row),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this),\n    renderBottomToolbarCustomActions: () => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: '1rem',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        variant: \"contained\",\n        onClick: handleSaveUsers,\n        disabled: Object.keys(editedUsers).length === 0 || Object.values(validationErrors).some(error => !!error),\n        children: isUpdatingUsers ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 30\n        }, this) : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), Object.values(validationErrors).some(error => !!error) && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Fix errors before submitting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this),\n    renderTopToolbarCustomActions: ({\n      table\n    }) => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => {\n        table.setCreatingRow(true); //simplest way to open the create row modal with no default values\n        //or you can pass in a row object to set default values with the `createRow` helper function\n        // table.setCreatingRow(\n        //   createRow(table, {\n        //     //optionally pass in default values for the new row, useful for nested data or other complex scenarios\n        //   }),\n        // );\n      },\n      children: \"Create New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this),\n    state: {\n      isLoading: isLoadingUsers,\n      isSaving: isCreatingUser || isUpdatingUsers || isDeletingUser,\n      showAlertBanner: isLoadingUsersError,\n      showProgressBars: isFetchingUsers\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    table: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 10\n  }, this);\n};\n\n//CREATE hook (post new user to api)\n_s(Example, \"nq5PNd4L+MUGvz6Gw/XW0N/hqjY=\", false, function () {\n  return [useCreateUser, useGetUsers, useUpdateUsers, useDeleteUser, useMaterialReactTable];\n});\n_c = Example;\nfunction useCreateUser() {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async user => {\n      //send api update request here\n      await new Promise(resolve => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: newUserInfo => {\n      queryClient.setQueryData(['users'], prevUsers => [...prevUsers, {\n        ...newUserInfo,\n        id: (Math.random() + 1).toString(36).substring(7)\n      }]);\n    }\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n\n//READ hook (get users from api)\n_s2(useCreateUser, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nfunction useGetUsers() {\n  _s3();\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: async () => {\n      //send api request here\n      await new Promise(resolve => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve(fakeData);\n    },\n    refetchOnWindowFocus: false\n  });\n}\n\n//UPDATE hook (put user in api)\n_s3(useGetUsers, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nfunction useUpdateUsers() {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async users => {\n      //send api update request here\n      await new Promise(resolve => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: newUsers => {\n      queryClient.setQueryData(['users'], prevUsers => prevUsers === null || prevUsers === void 0 ? void 0 : prevUsers.map(user => {\n        const newUser = newUsers.find(u => u.id === user.id);\n        return newUser ? newUser : user;\n      }));\n    }\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n\n//DELETE hook (delete user in api)\n_s4(useUpdateUsers, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nfunction useDeleteUser() {\n  _s5();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async userId => {\n      //send api update request here\n      await new Promise(resolve => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: userId => {\n      queryClient.setQueryData(['users'], prevUsers => prevUsers === null || prevUsers === void 0 ? void 0 : prevUsers.filter(user => user.id !== userId));\n    }\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n_s5(useDeleteUser, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nconst queryClient = new QueryClient();\nconst Table = () =>\n/*#__PURE__*/\n//Put this with your other react-query providers near root of your app\n_jsxDEV(QueryClientProvider, {\n  client: queryClient,\n  children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 323,\n  columnNumber: 3\n}, this);\n_c2 = Table;\nexport default Table;\nconst validateRequired = value => !!value.length;\nconst validateEmail = email => !!email.length && email.toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nfunction validateUser(user) {\n  return {\n    firstName: !validateRequired(user.firstName) ? 'First Name is Required' : '',\n    lastName: !validateRequired(user.lastName) ? 'Last Name is Required' : '',\n    email: !validateEmail(user.email) ? 'Incorrect Email Format' : ''\n  };\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"names":["useMemo","useState","MaterialReactTable","useMaterialReactTable","Box","Button","CircularProgress","IconButton","Tooltip","Typography","QueryClient","QueryClientProvider","useMutation","useQuery","useQueryClient","fakeData","usStates","DeleteIcon","jsxDEV","_jsxDEV","Example","_s","validationErrors","setValidationErrors","editedUsers","setEditedUsers","columns","accessorKey","header","enableEditing","size","muiEditTextFieldProps","cell","row","type","required","error","id","helperText","onBlur","event","validationError","validateRequired","currentTarget","value","undefined","original","validateEmail","editVariant","editSelectOptions","select","state","onChange","target","mutateAsync","createUser","isPending","isCreatingUser","useCreateUser","data","fetchedUsers","isError","isLoadingUsersError","isFetching","isFetchingUsers","isLoading","isLoadingUsers","useGetUsers","updateUsers","isUpdatingUsers","useUpdateUsers","deleteUser","isDeletingUser","useDeleteUser","handleCreateUser","values","table","newValidationErrors","validateUser","Object","some","setCreatingRow","handleSaveUsers","openDeleteConfirmModal","window","confirm","createDisplayMode","editDisplayMode","enableCellActions","enableClickToCopy","enableColumnPinning","enableRowActions","getRowId","muiToolbarAlertBannerProps","color","children","muiTableContainerProps","sx","minHeight","onCreatingRowCancel","onCreatingRowSave","renderRowActions","display","gap","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderBottomToolbarCustomActions","alignItems","variant","disabled","keys","length","renderTopToolbarCustomActions","isSaving","showAlertBanner","showProgressBars","_c","_s2","queryClient","mutationFn","user","Promise","resolve","setTimeout","onMutate","newUserInfo","setQueryData","prevUsers","Math","random","toString","substring","_s3","queryKey","queryFn","refetchOnWindowFocus","_s4","users","newUsers","map","newUser","find","u","_s5","userId","filter","Table","client","_c2","email","toLowerCase","match","firstName","lastName","$RefreshReg$"],"sources":["/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/components/table/table.js"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport {\n  MaterialReactTable,\n  // createRow,\n  useMaterialReactTable,\n} from 'material-react-table';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport {\n  QueryClient,\n  QueryClientProvider,\n  useMutation,\n  useQuery,\n  useQueryClient,\n} from '@tanstack/react-query';\nimport { fakeData, usStates } from './makeData';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst Example = () => {\n  const [validationErrors, setValidationErrors] = useState({});\n  //keep track of rows that have been edited\n  const [editedUsers, setEditedUsers] = useState({});\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'id',\n        header: 'Id',\n        enableEditing: false,\n        size: 80,\n      },\n      {\n        accessorKey: 'firstName',\n        header: 'First Name',\n        muiEditTextFieldProps: ({ cell, row }) => ({\n          type: 'text',\n          required: true,\n          error: !!validationErrors?.[cell.id],\n          helperText: validationErrors?.[cell.id],\n          //store edited user in state to be saved later\n          onBlur: (event) => {\n            const validationError = !validateRequired(event.currentTarget.value)\n              ? 'Required'\n              : undefined;\n            setValidationErrors({\n              ...validationErrors,\n              [cell.id]: validationError,\n            });\n            setEditedUsers({ ...editedUsers, [row.id]: row.original });\n          },\n        }),\n      },\n      {\n        accessorKey: 'lastName',\n        header: 'Last Name',\n        muiEditTextFieldProps: ({ cell, row }) => ({\n          type: 'text',\n          required: true,\n          error: !!validationErrors?.[cell.id],\n          helperText: validationErrors?.[cell.id],\n          //store edited user in state to be saved later\n          onBlur: (event) => {\n            const validationError = !validateRequired(event.currentTarget.value)\n              ? 'Required'\n              : undefined;\n            setValidationErrors({\n              ...validationErrors,\n              [cell.id]: validationError,\n            });\n            setEditedUsers({ ...editedUsers, [row.id]: row.original });\n          },\n        }),\n      },\n      {\n        accessorKey: 'email',\n        header: 'Email',\n        muiEditTextFieldProps: ({ cell, row }) => ({\n          type: 'email',\n          required: true,\n          error: !!validationErrors?.[cell.id],\n          helperText: validationErrors?.[cell.id],\n          //store edited user in state to be saved later\n          onBlur: (event) => {\n            const validationError = !validateEmail(event.currentTarget.value)\n              ? 'Incorrect Email Format'\n              : undefined;\n            setValidationErrors({\n              ...validationErrors,\n              [cell.id]: validationError,\n            });\n            setEditedUsers({ ...editedUsers, [row.id]: row.original });\n          },\n        }),\n      },\n      {\n        accessorKey: 'state',\n        header: 'State',\n        editVariant: 'select',\n        editSelectOptions: usStates,\n        muiEditTextFieldProps: ({ row }) => ({\n          select: true,\n          error: !!validationErrors?.state,\n          helperText: validationErrors?.state,\n          onChange: (event) =>\n            setEditedUsers({\n              ...editedUsers,\n              [row.id]: { ...row.original, state: event.target.value },\n            }),\n        }),\n      },\n    ],\n    [editedUsers, validationErrors],\n  );\n\n  //call CREATE hook\n  const { mutateAsync: createUser, isPending: isCreatingUser } =\n    useCreateUser();\n  //call READ hook\n  const {\n    data: fetchedUsers = [],\n    isError: isLoadingUsersError,\n    isFetching: isFetchingUsers,\n    isLoading: isLoadingUsers,\n  } = useGetUsers();\n  //call UPDATE hook\n  const { mutateAsync: updateUsers, isPending: isUpdatingUsers } =\n    useUpdateUsers();\n  //call DELETE hook\n  const { mutateAsync: deleteUser, isPending: isDeletingUser } =\n    useDeleteUser();\n\n  //CREATE action\n  const handleCreateUser = async ({ values, table }) => {\n    const newValidationErrors = validateUser(values);\n    if (Object.values(newValidationErrors).some((error) => error)) {\n      setValidationErrors(newValidationErrors);\n      return;\n    }\n    setValidationErrors({});\n    await createUser(values);\n    table.setCreatingRow(null); //exit creating mode\n  };\n\n  //UPDATE action\n  const handleSaveUsers = async () => {\n    if (Object.values(validationErrors).some((error) => !!error)) return;\n    await updateUsers(Object.values(editedUsers));\n    setEditedUsers({});\n  };\n\n  //DELETE action\n  const openDeleteConfirmModal = (row) => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      deleteUser(row.original.id);\n    }\n  };\n\n  const table = useMaterialReactTable({\n    columns,\n    data: fetchedUsers,\n    createDisplayMode: 'row', // ('modal', and 'custom' are also available)\n    editDisplayMode: 'cell', // ('modal', 'row', 'table', and 'custom' are also available)\n    enableCellActions: true,\n    enableClickToCopy: 'context-menu',\n    enableColumnPinning: true,\n    enableEditing: true,\n    enableRowActions: true,\n    getRowId: (row) => row.id,\n    muiToolbarAlertBannerProps: isLoadingUsersError\n      ? {\n          color: 'error',\n          children: 'Error loading data',\n        }\n      : undefined,\n    muiTableContainerProps: {\n      sx: {\n        minHeight: '500px',\n      },\n    },\n    onCreatingRowCancel: () => setValidationErrors({}),\n    onCreatingRowSave: handleCreateUser,\n    renderRowActions: ({ row }) => (\n      <Box sx={{ display: 'flex', gap: '1rem' }}>\n        <Tooltip title=\"Delete\">\n          <IconButton color=\"error\" onClick={() => openDeleteConfirmModal(row)}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </Box>\n    ),\n    renderBottomToolbarCustomActions: () => (\n      <Box sx={{ display: 'flex', gap: '1rem', alignItems: 'center' }}>\n        <Button\n          color=\"success\"\n          variant=\"contained\"\n          onClick={handleSaveUsers}\n          disabled={\n            Object.keys(editedUsers).length === 0 ||\n            Object.values(validationErrors).some((error) => !!error)\n          }\n        >\n          {isUpdatingUsers ? <CircularProgress size={25} /> : 'Save'}\n        </Button>\n        {Object.values(validationErrors).some((error) => !!error) && (\n          <Typography color=\"error\">Fix errors before submitting</Typography>\n        )}\n      </Box>\n    ),\n    renderTopToolbarCustomActions: ({ table }) => (\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          table.setCreatingRow(true); //simplest way to open the create row modal with no default values\n          //or you can pass in a row object to set default values with the `createRow` helper function\n          // table.setCreatingRow(\n          //   createRow(table, {\n          //     //optionally pass in default values for the new row, useful for nested data or other complex scenarios\n          //   }),\n          // );\n        }}\n      >\n        Create New User\n      </Button>\n    ),\n    state: {\n      isLoading: isLoadingUsers,\n      isSaving: isCreatingUser || isUpdatingUsers || isDeletingUser,\n      showAlertBanner: isLoadingUsersError,\n      showProgressBars: isFetchingUsers,\n    },\n  });\n\n  return <MaterialReactTable table={table} />;\n};\n\n//CREATE hook (post new user to api)\nfunction useCreateUser() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async (user) => {\n      //send api update request here\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: (newUserInfo) => {\n      queryClient.setQueryData(['users'], (prevUsers) => [\n        ...prevUsers,\n        {\n          ...newUserInfo,\n          id: (Math.random() + 1).toString(36).substring(7),\n        },\n      ]);\n    },\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n\n//READ hook (get users from api)\nfunction useGetUsers() {\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: async () => {\n      //send api request here\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve(fakeData);\n    },\n    refetchOnWindowFocus: false,\n  });\n}\n\n//UPDATE hook (put user in api)\nfunction useUpdateUsers() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async (users) => {\n      //send api update request here\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: (newUsers) => {\n      queryClient.setQueryData(['users'], (prevUsers) =>\n        prevUsers?.map((user) => {\n          const newUser = newUsers.find((u) => u.id === user.id);\n          return newUser ? newUser : user;\n        }),\n      );\n    },\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n\n//DELETE hook (delete user in api)\nfunction useDeleteUser() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: async (userId) => {\n      //send api update request here\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\n      return Promise.resolve();\n    },\n    //client side optimistic update\n    onMutate: (userId) => {\n      queryClient.setQueryData(['users'], (prevUsers) =>\n        prevUsers?.filter((user) => user.id !== userId),\n      );\n    },\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\n  });\n}\n\nconst queryClient = new QueryClient();\n\nconst Table = () => (\n  //Put this with your other react-query providers near root of your app\n  <QueryClientProvider client={queryClient}>\n    <Example />\n  </QueryClientProvider>\n);\n\nexport default Table;\n\nconst validateRequired = (value) => !!value.length;\nconst validateEmail = (email) =>\n  !!email.length &&\n  email\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    );\n\nfunction validateUser(user) {\n  return {\n    firstName: !validateRequired(user.firstName)\n      ? 'First Name is Required'\n      : '',\n    lastName: !validateRequired(user.lastName) ? 'Last Name is Required' : '',\n    email: !validateEmail(user.email) ? 'Incorrect Email Format' : '',\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}