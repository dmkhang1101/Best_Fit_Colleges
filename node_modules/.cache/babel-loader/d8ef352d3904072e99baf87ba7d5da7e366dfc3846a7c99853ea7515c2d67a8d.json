{"ast":null,"code":"var _jsxFileName = \"/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/components/table/table.js\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: {\n    firstName: 'John',\n    lastName: 'Doe'\n  },\n  address: '261 Erdman Ford',\n  city: 'East Daphne',\n  state: 'Kentucky'\n}, {\n  name: {\n    firstName: 'Jane',\n    lastName: 'Doe'\n  },\n  address: '769 Dominic Grove',\n  city: 'Columbus',\n  state: 'Ohio'\n}, {\n  name: {\n    firstName: 'Joe',\n    lastName: 'Doe'\n  },\n  address: '566 Brakus Inlet',\n  city: 'South Linda',\n  state: 'West Virginia'\n}, {\n  name: {\n    firstName: 'Kevin',\n    lastName: 'Vandy'\n  },\n  address: '722 Emie Stream',\n  city: 'Lincoln',\n  state: 'Nebraska'\n}, {\n  name: {\n    firstName: 'Joshua',\n    lastName: 'Rolluffs'\n  },\n  address: '32188 Larkin Turnpike',\n  city: 'Charleston',\n  state: 'South Carolina'\n}];\nconst Table = () => {\n  _s();\n  //should be memoized or stable\n  const columns = useMemo(() => [{\n    accessorKey: 'name.firstName',\n    //access nested data with dot notation\n    header: 'First Name',\n    size: 150\n  }, {\n    accessorKey: 'name.lastName',\n    header: 'Last Name',\n    size: 150\n  }, {\n    accessorKey: 'address',\n    //normal accessorKey\n    header: 'Address',\n    size: 200\n  }, {\n    accessorKey: 'city',\n    header: 'City',\n    size: 150\n  }, {\n    accessorKey: 'state',\n    header: 'State',\n    size: 150\n  }], []);\n  const table = useMaterialReactTable({\n    columns,\n    data //data must be memoized or stable (useState, useMemo, defined outside of this component, etc.)\n  });\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    table: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n};\n_s(Table, \"gomw3h1ds4OKvv2uRsCVmj6ZLGk=\", false, function () {\n  return [useMaterialReactTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useMemo","MaterialReactTable","useMaterialReactTable","jsxDEV","_jsxDEV","data","name","firstName","lastName","address","city","state","Table","_s","columns","accessorKey","header","size","table","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/components/table/table.js"],"sourcesContent":["import { useMemo } from 'react';\nimport {\n  MaterialReactTable,\n  useMaterialReactTable,\n} from 'material-react-table';\n\nconst data = [\n  {\n    name: {\n      firstName: 'John',\n      lastName: 'Doe',\n    },\n    address: '261 Erdman Ford',\n    city: 'East Daphne',\n    state: 'Kentucky',\n  },\n  {\n    name: {\n      firstName: 'Jane',\n      lastName: 'Doe',\n    },\n    address: '769 Dominic Grove',\n    city: 'Columbus',\n    state: 'Ohio',\n  },\n  {\n    name: {\n      firstName: 'Joe',\n      lastName: 'Doe',\n    },\n    address: '566 Brakus Inlet',\n    city: 'South Linda',\n    state: 'West Virginia',\n  },\n  {\n    name: {\n      firstName: 'Kevin',\n      lastName: 'Vandy',\n    },\n    address: '722 Emie Stream',\n    city: 'Lincoln',\n    state: 'Nebraska',\n  },\n  {\n    name: {\n      firstName: 'Joshua',\n      lastName: 'Rolluffs',\n    },\n    address: '32188 Larkin Turnpike',\n    city: 'Charleston',\n    state: 'South Carolina',\n  },\n];\n\nconst Table = () => {\n  //should be memoized or stable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'name.firstName', //access nested data with dot notation\n        header: 'First Name',\n        size: 150,\n      },\n      {\n        accessorKey: 'name.lastName',\n        header: 'Last Name',\n        size: 150,\n      },\n      {\n        accessorKey: 'address', //normal accessorKey\n        header: 'Address',\n        size: 200,\n      },\n      {\n        accessorKey: 'city',\n        header: 'City',\n        size: 150,\n      },\n      {\n        accessorKey: 'state',\n        header: 'State',\n        size: 150,\n      },\n    ],\n    [],\n  );\n\n  const table = useMaterialReactTable({\n    columns,\n    data, //data must be memoized or stable (useState, useMemo, defined outside of this component, etc.)\n  });\n\n  return <MaterialReactTable table={table} />;\n};\n\nexport default Table;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SACEC,kBAAkB,EAClBC,qBAAqB,QAChB,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAG,CACX;EACEC,IAAI,EAAE;IACJC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,iBAAiB;EAC1BC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE;IACJC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,mBAAmB;EAC5BC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE;IACJC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,kBAAkB;EAC3BC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE;IACJC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,iBAAiB;EAC1BC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE;IACJC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,uBAAuB;EAChCC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAMC,OAAO,GAAGd,OAAO,CACrB,MAAM,CACJ;IACEe,WAAW,EAAE,gBAAgB;IAAE;IAC/BC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,WAAW,EAAE,eAAe;IAC5BC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,WAAW,EAAE,SAAS;IAAE;IACxBC,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,WAAW,EAAE,MAAM;IACnBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,WAAW,EAAE,OAAO;IACpBC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE;EACR,CAAC,CACF,EACD,EACF,CAAC;EAED,MAAMC,KAAK,GAAGhB,qBAAqB,CAAC;IAClCY,OAAO;IACPT,IAAI,CAAE;EACR,CAAC,CAAC;EAEF,oBAAOD,OAAA,CAACH,kBAAkB;IAACiB,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7C,CAAC;AAACT,EAAA,CAvCID,KAAK;EAAA,QAiCKV,qBAAqB;AAAA;AAAAqB,EAAA,GAjC/BX,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}