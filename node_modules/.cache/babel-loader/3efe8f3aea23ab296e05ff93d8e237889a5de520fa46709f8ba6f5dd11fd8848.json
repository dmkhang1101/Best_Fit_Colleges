{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createAsyncLocalStorage\", {\n  enumerable: true,\n  get: function () {\n    return createAsyncLocalStorage;\n  }\n});\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n  disable() {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n  getStore() {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined;\n  }\n  run() {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n  exit() {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n  enterWith() {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage();\n  }\n  return new FakeAsyncLocalStorage();\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=async-local-storage.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}