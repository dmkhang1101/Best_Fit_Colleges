{"ast":null,"code":"var _jsxFileName = \"/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/controller/info.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nexport function Info({\n  children\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [colleges, setColleges] = useState([]);\n  const updateData = data => {\n    console.log('update data to ' + data);\n    setData(data);\n  };\n  const updateFilters = filters => {\n    console.log('update filter to ' + filters);\n    setFilters(filters);\n  };\n  const updateColleges = colleges => {\n    console.log('update colleges to ' + colleges);\n    setColleges(colleges);\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      data,\n      updateData,\n      filters,\n      updateFilters,\n      colleges,\n      updateColleges\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Info, \"jpKlkBW9hbnT38/utMsaprX3HGE=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useState","createContext","jsxDEV","_jsxDEV","Context","Info","children","_s","data","setData","filters","setFilters","colleges","setColleges","updateData","console","log","updateFilters","updateColleges","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/src/controller/info.js"],"sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport const Context = createContext();\n\nexport function Info({ children }) {\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [colleges, setColleges] = useState([])\n\n  const updateData = data => {\n    console.log('update data to ' + data);\n    setData(data);\n  };\n\n  const updateFilters = filters => {\n    console.log('update filter to ' + filters)\n    setFilters(filters)\n  }\n\n  const updateColleges = colleges => {\n    console.log('update colleges to ' + colleges)\n    setColleges(colleges)\n  }\n\n  return (\n    <Context.Provider value={{ data, updateData, filters, updateFilters, colleges, updateColleges }}>\n      {children}\n    </Context.Provider>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,OAAO,gBAAGH,aAAa,CAAC,CAAC;AAEtC,OAAO,SAASI,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,UAAU,GAAGN,IAAI,IAAI;IACzBO,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGR,IAAI,CAAC;IACrCC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMS,aAAa,GAAGP,OAAO,IAAI;IAC/BK,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGN,OAAO,CAAC;IAC1CC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,MAAMQ,cAAc,GAAGN,QAAQ,IAAI;IACjCG,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGJ,QAAQ,CAAC;IAC7CC,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,oBACET,OAAA,CAACC,OAAO,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEM,UAAU;MAAEJ,OAAO;MAAEO,aAAa;MAAEL,QAAQ;MAAEM;IAAe,CAAE;IAAAZ,QAAA,EAC7FA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB;AAACjB,EAAA,CAzBeF,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}