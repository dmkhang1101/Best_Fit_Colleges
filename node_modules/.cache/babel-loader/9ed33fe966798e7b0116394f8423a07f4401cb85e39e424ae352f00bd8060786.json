{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { applyDefaultViewProps } from '../internals/utils/views';\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm, _themeProps$disableFu, _themeProps$disablePa, _themeProps$slotProps;\n  const utils = useUtils();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const ampm = (_themeProps$ampm = themeProps.ampm) !== null && _themeProps$ampm !== void 0 ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  const localeText = React.useMemo(() => {\n    var _themeProps$localeTex;\n    if (((_themeProps$localeTex = themeProps.localeText) === null || _themeProps$localeTex === void 0 ? void 0 : _themeProps$localeTex.toolbarTitle) == null) {\n      return themeProps.localeText;\n    }\n    return _extends({}, themeProps.localeText, {\n      timePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  return _extends({}, themeProps, {\n    ampm,\n    localeText\n  }, applyDefaultViewProps({\n    views: themeProps.views,\n    openTo: themeProps.openTo,\n    defaultViews: ['hours', 'minutes'],\n    defaultOpenTo: 'hours'\n  }), {\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) !== null && _themeProps$disableFu !== void 0 ? _themeProps$disableFu : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) !== null && _themeProps$disablePa !== void 0 ? _themeProps$disablePa : false,\n    slots: _extends({\n      toolbar: TimePickerToolbar\n    }, themeProps.slots),\n    slotProps: _extends({}, themeProps.slotProps, {\n      toolbar: _extends({\n        ampm,\n        ampmInClock: themeProps.ampmInClock\n      }, (_themeProps$slotProps = themeProps.slotProps) === null || _themeProps$slotProps === void 0 ? void 0 : _themeProps$slotProps.toolbar)\n    })\n  });\n}","map":{"version":3,"names":["_extends","React","useThemeProps","useUtils","TimePickerToolbar","applyDefaultViewProps","useTimePickerDefaultizedProps","props","name","_themeProps$ampm","_themeProps$disableFu","_themeProps$disablePa","_themeProps$slotProps","utils","themeProps","ampm","is12HourCycleInCurrentLocale","localeText","useMemo","_themeProps$localeTex","toolbarTitle","timePickerToolbarTitle","views","openTo","defaultViews","defaultOpenTo","disableFuture","disablePast","slots","toolbar","slotProps","ampmInClock"],"sources":["/Users/khangdo/Documents/Best Fit College/react code/best_fit_colleges/node_modules/@mui/x-date-pickers/TimePicker/shared.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { applyDefaultViewProps } from '../internals/utils/views';\nexport function useTimePickerDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const ampm = themeProps.ampm ?? utils.is12HourCycleInCurrentLocale();\n  const localeText = React.useMemo(() => {\n    if (themeProps.localeText?.toolbarTitle == null) {\n      return themeProps.localeText;\n    }\n    return _extends({}, themeProps.localeText, {\n      timePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  return _extends({}, themeProps, {\n    ampm,\n    localeText\n  }, applyDefaultViewProps({\n    views: themeProps.views,\n    openTo: themeProps.openTo,\n    defaultViews: ['hours', 'minutes'],\n    defaultOpenTo: 'hours'\n  }), {\n    disableFuture: themeProps.disableFuture ?? false,\n    disablePast: themeProps.disablePast ?? false,\n    slots: _extends({\n      toolbar: TimePickerToolbar\n    }, themeProps.slots),\n    slotProps: _extends({}, themeProps.slotProps, {\n      toolbar: _extends({\n        ampm,\n        ampmInClock: themeProps.ampmInClock\n      }, themeProps.slotProps?.toolbar)\n    })\n  });\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAO,SAASC,6BAA6BA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAAA,IAAAC,gBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EACzD,MAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,MAAMW,UAAU,GAAGZ,aAAa,CAAC;IAC/BK,KAAK;IACLC;EACF,CAAC,CAAC;EACF,MAAMO,IAAI,IAAAN,gBAAA,GAAGK,UAAU,CAACC,IAAI,cAAAN,gBAAA,cAAAA,gBAAA,GAAII,KAAK,CAACG,4BAA4B,CAAC,CAAC;EACpE,MAAMC,UAAU,GAAGhB,KAAK,CAACiB,OAAO,CAAC,MAAM;IAAA,IAAAC,qBAAA;IACrC,IAAI,EAAAA,qBAAA,GAAAL,UAAU,CAACG,UAAU,cAAAE,qBAAA,uBAArBA,qBAAA,CAAuBC,YAAY,KAAI,IAAI,EAAE;MAC/C,OAAON,UAAU,CAACG,UAAU;IAC9B;IACA,OAAOjB,QAAQ,CAAC,CAAC,CAAC,EAAEc,UAAU,CAACG,UAAU,EAAE;MACzCI,sBAAsB,EAAEP,UAAU,CAACG,UAAU,CAACG;IAChD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,UAAU,CAACG,UAAU,CAAC,CAAC;EAC3B,OAAOjB,QAAQ,CAAC,CAAC,CAAC,EAAEc,UAAU,EAAE;IAC9BC,IAAI;IACJE;EACF,CAAC,EAAEZ,qBAAqB,CAAC;IACvBiB,KAAK,EAAER,UAAU,CAACQ,KAAK;IACvBC,MAAM,EAAET,UAAU,CAACS,MAAM;IACzBC,YAAY,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;IAClCC,aAAa,EAAE;EACjB,CAAC,CAAC,EAAE;IACFC,aAAa,GAAAhB,qBAAA,GAAEI,UAAU,CAACY,aAAa,cAAAhB,qBAAA,cAAAA,qBAAA,GAAI,KAAK;IAChDiB,WAAW,GAAAhB,qBAAA,GAAEG,UAAU,CAACa,WAAW,cAAAhB,qBAAA,cAAAA,qBAAA,GAAI,KAAK;IAC5CiB,KAAK,EAAE5B,QAAQ,CAAC;MACd6B,OAAO,EAAEzB;IACX,CAAC,EAAEU,UAAU,CAACc,KAAK,CAAC;IACpBE,SAAS,EAAE9B,QAAQ,CAAC,CAAC,CAAC,EAAEc,UAAU,CAACgB,SAAS,EAAE;MAC5CD,OAAO,EAAE7B,QAAQ,CAAC;QAChBe,IAAI;QACJgB,WAAW,EAAEjB,UAAU,CAACiB;MAC1B,CAAC,GAAAnB,qBAAA,GAAEE,UAAU,CAACgB,SAAS,cAAAlB,qBAAA,uBAApBA,qBAAA,CAAsBiB,OAAO;IAClC,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}